"use strict";var r=Object.defineProperty;var _=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var i=(n,t)=>{for(var E in t)r(n,E,{get:t[E],enumerable:!0})},I=(n,t,E,O)=>{if(t&&typeof t=="object"||typeof t=="function")for(let R of u(t))!U.call(n,R)&&R!==E&&r(n,R,{get:()=>t[R],enumerable:!(O=_(t,R))||O.enumerable});return n};var N=n=>I(r({},"__esModule",{value:!0}),n);var m={};i(m,{AccumulatorService:()=>a});module.exports=N(m);var A=require("@prisma/client"),S=new A.PrismaClient({});S.$disconnect();var s=()=>"OPERA\xC7\xC3O EXECUTADA COM SUCESSO.";var c=n=>n,o=function(n,t,E=!1){return{error:E,content:n,message:t}};var a=class{static async store(t){let E=await S.accumulator_bonus.create({data:{profile_id:t,bonus_amount:0}});return o(E,s(),!0)}static async update_to_bonus(t,E){try{let O=await S.accumulator_bonus.findFirst({where:{id:E}}),R=0;O!=null&&O.bonus_amount||(R=(O==null?void 0:O.bonus_amount)!=null?Number(O==null?void 0:O.bonus_amount)+t:t),console.log("UPDATE_BONUS: ",R);let e=await S.accumulator_bonus.update({where:{profile_id:E},data:{bonus_amount:R}});return o(e,s(),!1)}catch(O){return o(O,c("ERROR AO ATUALIZAR O VALOR DO BONUS DO USUARIO."),!0)}}};0&&(module.exports={AccumulatorService});
