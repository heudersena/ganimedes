"use strict";var x=Object.create;var m=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var T=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var A=(a,t)=>{for(var e in t)m(a,e,{get:t[e],enumerable:!0})},f=(a,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of O(t))!v.call(a,n)&&n!==e&&m(a,n,{get:()=>t[n],enumerable:!(i=C(t,n))||i.enumerable});return a};var P=(a,t,e)=>(e=a!=null?x(T(a)):{},f(t||!a||!a.__esModule?m(e,"default",{value:a,enumerable:!0}):e,a)),L=a=>f(m({},"__esModule",{value:!0}),a);var F={};A(F,{WebhookDatabase:()=>_});module.exports=L(F);var g=require("@prisma/client"),r=new g.PrismaClient({});r.$disconnect();var u=P(require("mercadopago")),y=P(require("dayjs"));u.default.configurations.setAccessToken(String(process.env.MERCADO_PAGO_KEY_PROD));var l=class{static async CreatePayment(t){var e;try{let i={transaction_amount:t.transaction_amount,payment_method_id:t.payment_method_id,payer:{email:t.payer.email},installments:1,date_of_expiration:String((0,y.default)(new Date).add(6,"minutes").format("YYYY-MM-DDTHH:mm:ss.000ZZ"))};return await((e=u.default.payment)==null?void 0:e.save(i))}catch(i){return i}}static async GetPayment(t){try{return await u.default.payment.findById(t)}catch(e){return e}}};var _=class{static async WebHook(t,e){let i=t,n=await this.InternalFunctionMercadoPagoGetTransactionId(i),s=await l.GetPayment(Number(i));if((n==null?void 0:n.m_status)!=="approved"){try{switch(e){case"payment.updated":if(s.response.status_detail==="expired"){let c=await r.mercadoPago.update({where:{id:n==null?void 0:n.id},data:{m_action:"updated",m_status:s.response.status,m_status_detail:s.response.status_detail,m_net_received_amount:s.response.transaction_details.net_received_amount,m_transaction_id:s.response.transaction_details.transaction_id??"NULL"}});await r.transaction.update({where:{id:c.transaction_id},data:{mercado_pago_transaction_status:s.response.status}})}else{let c=await r.mercadoPago.update({where:{id:n==null?void 0:n.id},data:{m_action:"updated",m_status:s.response.status,m_status_detail:s.response.status_detail,m_net_received_amount:s.response.transaction_details.net_received_amount,m_transaction_id:s.response.transaction_details.transaction_id??"NULL"}}),o=await r.transaction.update({where:{id:c.transaction_id},data:{mercado_pago_transaction_status:s.response.status}});console.log("transaction_update=>",o);let d=await r.accumulator_bonus.findFirst({where:{profile_id:o.profile_id}});console.log("acc_bonus=>",d);let w=Number(d==null?void 0:d.bonus_amount)+Number(o.bonus);console.log("TOTAL BONUS: ",w);let b=await r.accumulator_bonus.update({where:{profile_id:o.profile_id},data:{bonus_amount:w}});console.log("finish=> ",b);let p=await r.profile.findFirst({where:{id:o==null?void 0:o.profile_id}}),h=o==null?void 0:o.balance,M=p==null?void 0:p.balance,I=Number(h)+Number(M),N=await r.profile.update({where:{id:o==null?void 0:o.profile_id},data:{balance:I}});console.log("PROFILE::BALANCE:: ",N)}break;default:console.log("METHOD::ACTION: ",e);break}}catch(c){console.log(c)}return!0}}static async InternalFunctionMercadoPagoGetTransactionId(t){return await r.mercadoPago.findFirst({where:{m_id:t}})}};0&&(module.exports={WebhookDatabase});
